.switch {
	@height: 20px;

	height: @height;
	position: relative;

	> input {
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
		filter: alpha(opacity=0);
		-moz-opacity: 0;
		opacity: 0;
		z-index: 100;
		position: absolute;
		width: 100%;
		height: 100%;
		cursor: pointer;

		+ label > i {
			@distance: 2px;
			@size: (@height - 2 * @distance);

			display: block;
			height: @size;
			width: @size;

			position: absolute;
			left: 0;
			top: 0;
			margin: @distance;

			z-index: 2;
			border-radius: inherit;
			background: #ffffff; /* Fallback */
			background: linear-gradient(#ededed, #ffffff);
			box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), // glow on top
			0 0 (@size / 6.375) rgba(0, 0, 0, 0.3), // core shadow
			0 (@size / 4.25) (@size / 4.25) rgba(0, 0, 0, 0.4); // spread shadow
			-webkit-transition: all 0.32s ease;
			transition: all 0.32s ease;
		}
	}

	> label {
		display: block;
		width: (@height / 55 * 180 * 0.55);
		height: 100%;
		position: relative;

		margin-right: 22px;

		//background: #ffffff; /*#121823*/
		background-color: rgba(0, 0, 0, 0.2);
		//background: linear-gradient(#ffffff, #f5f5f5);
		@radius: (6 / 11 * @height);
		border-radius: @radius @radius @radius @radius;
		box-shadow: inset 0 (3 / 55 * @height) (8 / 55 * @height) 1px rgba(0, 0, 0, 0.5),
		inset 0 1px 0 rgba(0, 0, 0, 0.5),
		0 1px 0 rgba(255, 255, 255, 0.2);
		-webkit-transition: all 0.32s ease;
		transition: all 0.32s ease;

		+ span {
			@size: 10px;
			display: inline-block;
			position: absolute;
			right: 0;
			top: ( (@height - @size) / 2);
			width: @size;
			height: @size;
			border-radius: 50%;
			background: #bababa;
			background: linear-gradient(#a6a6a6, #bababa);
			box-shadow: inset 0 1px 0 rgba(0, 0, 0, 0.2),
			0 1px 0 rgba(255, 255, 255, 0.1),
			0 0 (2 / 11 * @height) rgba(255, 255, 255, 0),
			inset 0 0 (8 / 55 * @height) rgba(0, 0, 0, 0.9),
			inset 0 (-2 / 55 * @height) (1 / 11 * @height) rgba(0, 0, 0, 0.3),
			inset 0 (-1 / 11 * @height) (1 / 11 * @height) rgba(0, 0, 0, 0.5);
			-webkit-transition: all 0.32s ease;
			transition: all 0.32s ease;
			z-index: 2;
		}
	}

	/* Toggle */

	> input:checked {
		+ label {
			> i {
				@distance: 2px;
				@size: (@height - 2 * @distance);

				left: 100%;
				transform: translateX(-100%);
				//background: #aed49b;
				//background: radial-gradient(#ffffff 10%, limegreen);
				//box-shadow:
				//		inset 0 1px 0 rgba(255,255,255,0.2), // glow on top
				//		0 0 (@size / 6.375) rgba(0,0,0,0), // core shadow
				//		0 0 16px 3px limegreen; // spread shadow
				box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),
				0 0 (8 / 55 * @height) rgba(0, 0, 0, 0.3),
				0 (8 / 55 * @height) (8 / 55 * @height) rgba(0, 0, 0, 0.3),
					inset -1px 0 1px limegreen;
			}

			+ span {
				background: limegreen;
				background: radial-gradient(#ffffff, limegreen);
				//background: radial-gradient(#ffffff, #638f5d);
				box-shadow: inset 0 1px 0 rgba(0, 0, 0, 0),
				0 1px 0 rgba(255, 255, 255, 0),
				0 0 10px 3px limegreen,
				inset 0 0 (8 / 55 * @height) rgba(0, 0, 0, 0),
				inset 0 (-2 / 55 * @height) (1 / 11 * @height) rgba(0, 0, 0, 0),
				inset 0 (-1 / 11 * @height) (1 / 11 * @height) rgba(0, 0, 0, 0);

				//box-shadow: inset 0 1px 0 rgba(0, 0, 0, 0.1),
				//0 1px 0 rgba(255, 255, 255, 0.1),
				//0 0 (2 / 11 * @height) rgb(129, 212, 85, 1),
				//inset 0 0 (8 / 55 * @height) rgba(50, 205, 50, 0.8),
				//inset 0  (-2 / 55 * @height) (1 / 11 * @height) rgba(166, 212, 157, 0.3),
				//inset 0 (-3 / 55 * @height) (8 / 55 * @height) rgba(166, 212, 157, 0.5);
			}
		}

	}
}







