@import url('https://fonts.googleapis.com/css?family=Roboto+Mono|Roboto:400,700');
body {
  padding: 0;
  margin: 0;
}
canvas,
svg {
  display: block;
}
svg:focus {
  outline: none !important;
  box-shadow: none !important;
}
svg text {
  cursor: default;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
svg text::selection {
  background: none;
}
svg .clickable {
  cursor: pointer;
}
svg .clickable text {
  cursor: pointer;
}
.layout,
.layout-column,
.layout-row {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
}
.layout-column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
}
.layout-row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  flex-direction: row;
}
.layout-row > .flex {
  min-width: 0;
}
.layout-column > .flex {
  min-height: 0;
}
.flex,
.flex-grow {
  -webkit-box-flex: 1;
  box-sizing: border-box;
}
.flex {
  -webkit-flex: 1;
  flex: 1;
}
.hidden {
  display: none;
}
body {
  font-family: 'Roboto', sans-serif;
}
h1 {
  margin: 0.67em;
}
#drawingContainer {
  margin-right: 30px;
}
#quadrantJson {
  box-sizing: border-box;
  display: block;
  width: 100%;
  height: 100%;
  resize: none;
  font-family: 'Roboto Mono', monospace;
}
#jsonStatus {
  padding: 1em;
  color: white;
  background-color: #03A9F4;
}
#jsonStatus.error {
  background-color: #F44336;
}
#jsonStatus.success {
  background-color: #4CAF50;
}
#jsonStatus.success + #renderButton {
  display: inline-block;
}
#renderButton {
  display: none;
}
#reference {
  padding: 1em;
  max-width: 14em;
}
#reference > :first-child {
  margin-top: 0;
}
#reference > ul {
  word-wrap: break-word;
  word-break: break-all;
}
#reference code {
  font-family: 'Roboto Mono', monospace;
}
#developPanel {
  position: fixed;
  top: 0;
  right: 0;
  background-color: rgba(255, 255, 255, 0.8);
  padding: 1em;
  min-width: 16em;
  z-index: 1000;
}
#developPanel > :first-child {
  margin-top: 0;
}
#developPanel > h2 {
  font-size: 1.2em;
}
#developPanel > table td,
#developPanel > table th {
  padding: 0.15em 0.25em;
}
#developPanel > table > tbody th {
  text-align: right;
  padding-right: 0.5em;
}
#developPanel > table > tbody > tr.separatorRow > th {
  text-align: center;
  padding-right: 0.25em;
}
#developPanel > table > tbody td {
  min-width: 6.35em;
}
#developPanel > table > tbody td > h3 {
  font-size: inherit;
  text-align: center;
  margin-bottom: 0;
}
#developPanel .good {
  color: #4CAF50;
}
#developPanel .neutral {
  color: #03A9F4;
}
#developPanel .bad {
  color: #F44336;
}
.toggleButton {
  color: white;
}
.toggleButton > .label::after {
  content: ':';
}
.toggleButton.on {
  background-color: #4CAF50;
}
.toggleButton.off {
  background-color: #F44336;
}
.actionButton {
  color: white;
  background-color: #03A9F4;
}
dl.flatList {
  float: left;
  width: 100%;
  clear: both;
  margin: 0;
}
dl.flatList > dt,
dl.flatList dd {
  float: left;
}
dl.flatList > dt {
  clear: left;
}
dl.flatList > dt::after {
  content: ': ';
}
dl.flatList > dd {
  margin: 0;
  margin-left: 0.5em;
}
#develop_input_movement {
  font-family: "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif;
}
#serverTickPopup {
  position: fixed;
  z-index: 2000;
  top: 50%;
  left: 25%;
  transform: translate(-50%, -50%);
  max-height: 95vh;
  max-width: 40em;
  background-color: white;
}
#serverTickPopup h2 {
  margin: 0;
}
#serverTickPopup > pre {
  white-space: pre-wrap;
  overflow-y: auto;
  padding: 0.7em;
  margin: 0;
}
#serverTickPopup > header,
#serverTickPopup footer {
  padding: 0.7em;
}
#develop_closeServerTickPopup {
  float: right;
}
#loadingScreen {
  background-color: #222;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1000;
}
#loadingScreen > #loadingWrapper {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  height: 10vh;
  width: 50vw;
  margin: 0 auto;
  background-color: rgba(0, 0, 0, 0.6);
  border-radius: 1vh;
  overflow: hidden;
  transition: all 1s;
  transition-property: height, width, border-radius;
}
#loadingScreen > #loadingWrapper > h2 {
  line-height: 10vh;
  font-size: 4vh;
  text-align: center;
  margin: 0;
  color: white;
}
#loadingScreen.finished {
  animation: fade-out 0.3s 1s forwards;
}
#loadingScreen.finished > #loadingWrapper {
  height: 100vh;
  width: 100vw;
  background-color: #006030;
  border-radius: 0;
}
#loadingScreen.finished > #loadingWrapper > h2 {
  display: none;
}
@keyframes fade-out {
  to {
    opacity: 0;
    visibility: hidden;
  }
}
#loadingBar {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 0;
  background-image: linear-gradient(to right, white, #006030);
  z-index: -1;
  transition: opacity 1s;
}
.finished > #loadingBar {
  opacity: 0;
}
#gameUI * {
  box-sizing: border-box;
}
#minimap {
  width: 15%;
  padding-bottom: 15%;
  position: absolute;
  bottom: 0;
  left: 0;
  background-color: Cornsilk;
  border: 10px solid Cornsilk;
}
#inventory {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
}
#inventory > .inventorySlot {
  border-radius: 10%;
  width: 7vh;
  height: 7vh;
  color: white;
  font-size: 1.75vh;
  padding: 0.7vh;
  margin: 0.7vh;
  text-decoration: none;
  position: relative;
}
#inventory > .inventorySlot.empty {
  background-color: rgba(0, 0, 0, 0.6);
}
#inventory > .inventorySlot.empty > .itemIcon {
  display: none;
}
#inventory > .inventorySlot.filled {
  background-color: rgba(64, 64, 64, 0.6);
}
#inventory > .inventorySlot.active {
  background-color: rgba(255, 255, 255, 0.6);
}
#inventory > .inventorySlot > .count {
  position: absolute;
  bottom: 0;
  right: 0;
}
#inventory > .inventorySlot > .itemIcon {
  width: 100%;
}
