// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var ChieftainApi = ChieftainApi || {};

/**
 * @enum
 */
ChieftainApi.ClientMessageBody = {
  NONE: 0,
  Scoreboard: 1
};

/**
 * @constructor
 */
ChieftainApi.ScoreboardPlayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ChieftainApi.ScoreboardPlayer}
 */
ChieftainApi.ScoreboardPlayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ChieftainApi.ScoreboardPlayer=} obj
 * @returns {ChieftainApi.ScoreboardPlayer}
 */
ChieftainApi.ScoreboardPlayer.getRootAsScoreboardPlayer = function(bb, obj) {
  return (obj || new ChieftainApi.ScoreboardPlayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ChieftainApi.ScoreboardPlayer.prototype.uuid = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ChieftainApi.ScoreboardPlayer.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
ChieftainApi.ScoreboardPlayer.prototype.score = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
ChieftainApi.ScoreboardPlayer.startScoreboardPlayer = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} uuidOffset
 */
ChieftainApi.ScoreboardPlayer.addUuid = function(builder, uuidOffset) {
  builder.addFieldOffset(0, uuidOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ChieftainApi.ScoreboardPlayer.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} score
 */
ChieftainApi.ScoreboardPlayer.addScore = function(builder, score) {
  builder.addFieldInt64(2, score, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ChieftainApi.ScoreboardPlayer.endScoreboardPlayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ChieftainApi.Scoreboard = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ChieftainApi.Scoreboard}
 */
ChieftainApi.Scoreboard.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ChieftainApi.Scoreboard=} obj
 * @returns {ChieftainApi.Scoreboard}
 */
ChieftainApi.Scoreboard.getRootAsScoreboard = function(bb, obj) {
  return (obj || new ChieftainApi.Scoreboard).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {ChieftainApi.ScoreboardPlayer=} obj
 * @returns {ChieftainApi.ScoreboardPlayer}
 */
ChieftainApi.Scoreboard.prototype.players = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ChieftainApi.ScoreboardPlayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ChieftainApi.Scoreboard.prototype.playersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ChieftainApi.Scoreboard.startScoreboard = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playersOffset
 */
ChieftainApi.Scoreboard.addPlayers = function(builder, playersOffset) {
  builder.addFieldOffset(0, playersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ChieftainApi.Scoreboard.createPlayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ChieftainApi.Scoreboard.startPlayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ChieftainApi.Scoreboard.endScoreboard = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ChieftainApi.ClientMessage = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ChieftainApi.ClientMessage}
 */
ChieftainApi.ClientMessage.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ChieftainApi.ClientMessage=} obj
 * @returns {ChieftainApi.ClientMessage}
 */
ChieftainApi.ClientMessage.getRootAsClientMessage = function(bb, obj) {
  return (obj || new ChieftainApi.ClientMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {ChieftainApi.ClientMessageBody}
 */
ChieftainApi.ClientMessage.prototype.bodyType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {ChieftainApi.ClientMessageBody} */ (this.bb.readUint8(this.bb_pos + offset)) : ChieftainApi.ClientMessageBody.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
ChieftainApi.ClientMessage.prototype.body = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ChieftainApi.ClientMessage.startClientMessage = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ChieftainApi.ClientMessageBody} bodyType
 */
ChieftainApi.ClientMessage.addBodyType = function(builder, bodyType) {
  builder.addFieldInt8(0, bodyType, ChieftainApi.ClientMessageBody.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
ChieftainApi.ClientMessage.addBody = function(builder, bodyOffset) {
  builder.addFieldOffset(1, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ChieftainApi.ClientMessage.endClientMessage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ChieftainApi.ClientMessage.finishClientMessageBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.ChieftainApi = ChieftainApi;
