// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var BerryhunterApi = BerryhunterApi || {};

/**
 * @enum
 */
BerryhunterApi.ActionType = {
  Primary: 0,
  CraftItem: 1,
  EquipItem: 2,
  UnequipItem: 3,
  DropItem: 4,
  PlaceItem: 5,
  ConsumeItem: 6
};

/**
 * @constructor
 */
BerryhunterApi.Vec3f = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {BerryhunterApi.Vec3f}
 */
BerryhunterApi.Vec3f.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
BerryhunterApi.Vec3f.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
BerryhunterApi.Vec3f.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
BerryhunterApi.Vec3f.prototype.z = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
BerryhunterApi.Vec3f.createVec3f = function(builder, x, y, z) {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
BerryhunterApi.Vec2f = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {BerryhunterApi.Vec2f}
 */
BerryhunterApi.Vec2f.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
BerryhunterApi.Vec2f.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
BerryhunterApi.Vec2f.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
BerryhunterApi.Vec2f.createVec2f = function(builder, x, y) {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

// Exports for Node.js and RequireJS
this.BerryhunterApi = BerryhunterApi;
