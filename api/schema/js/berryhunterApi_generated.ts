// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum ActionType{
  Primary= 0,
  CraftItem= 1,
  EquipItem= 2,
  UnequipItem= 3,
  DropItem= 4,
  PlaceItem= 5,
  ConsumeItem= 6
}};

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum ClientMessageBody{
  NONE= 0,
  Input= 1,
  Join= 2,
  Cheat= 3,
  ChatMessage= 4
}};

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum EntityType{
  DebugCircle= 0,
  Border= 1,
  RoundTree= 2,
  MarioTree= 3,
  Character= 4,
  Stone= 5,
  Bronze= 6,
  Iron= 7,
  BerryBush= 8,
  Dodo= 9,
  SaberToothCat= 10,
  Mammoth= 11,
  Placeable= 12,
  Titanium= 13,
  Flower= 14
}};

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum StatusEffect{
  Damaged= 0,
  Yielded= 1,
  Freezing= 2,
  Starving= 3,
  Regenerating= 4,
  DamagedAmbient= 5
}};

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum AnyEntity{
  NONE= 0,
  Character= 1,
  Mob= 2,
  Resource= 3,
  Placeable= 4
}};

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum Player{
  NONE= 0,
  Character= 1,
  Spectator= 2
}};

/**
 * @enum
 */
export namespace BerryhunterApi{
export enum ServerMessageBody{
  NONE= 0,
  Welcome= 1,
  GameState= 2,
  Accept= 3,
  Obituary= 4,
  EntityMessage= 5,
  Scoreboard= 6,
  ValidToken= 7
}};

/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Vec3f {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Vec3f}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec3f {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
z():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
static createVec3f(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Vec2f {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Vec2f}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec2f {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
static createVec2f(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Action {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Action}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Action {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Action=} obj
 * @returns {Action}
 */
static getRootAsAction(bb:flatbuffers.ByteBuffer, obj?:Action):Action {
  return (obj || new Action).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
item():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {BerryhunterApi.ActionType}
 */
actionType():BerryhunterApi.ActionType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /** @type {BerryhunterApi.ActionType} */ (this.bb!.readUint8(this.bb_pos + offset)) : BerryhunterApi.ActionType.Primary;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startAction(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} item
 */
static addItem(builder:flatbuffers.Builder, item:number) {
  builder.addFieldInt8(0, item, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.ActionType} actionType
 */
static addActionType(builder:flatbuffers.Builder, actionType:BerryhunterApi.ActionType) {
  builder.addFieldInt8(1, actionType, BerryhunterApi.ActionType.Primary);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endAction(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Input {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Input}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Input {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Input=} obj
 * @returns {Input}
 */
static getRootAsInput(bb:flatbuffers.ByteBuffer, obj?:Input):Input {
  return (obj || new Input).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
tick():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
movement(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns {number}
 */
rotation():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {BerryhunterApi.Action=} obj
 * @returns {BerryhunterApi.Action|null}
 */
action(obj?:BerryhunterApi.Action):BerryhunterApi.Action|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new BerryhunterApi.Action).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startInput(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} tick
 */
static addTick(builder:flatbuffers.Builder, tick:flatbuffers.Long) {
  builder.addFieldInt64(0, tick, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} movementOffset
 */
static addMovement(builder:flatbuffers.Builder, movementOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, movementOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rotation
 */
static addRotation(builder:flatbuffers.Builder, rotation:number) {
  builder.addFieldFloat32(2, rotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} actionOffset
 */
static addAction(builder:flatbuffers.Builder, actionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, actionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endInput(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Join {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Join}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Join {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Join=} obj
 * @returns {Join}
 */
static getRootAsJoin(bb:flatbuffers.ByteBuffer, obj?:Join):Join {
  return (obj || new Join).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
playerName():string|null
playerName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
playerName(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startJoin(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playerNameOffset
 */
static addPlayerName(builder:flatbuffers.Builder, playerNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endJoin(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Cheat {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Cheat}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Cheat {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Cheat=} obj
 * @returns {Cheat}
 */
static getRootAsCheat(bb:flatbuffers.ByteBuffer, obj?:Cheat):Cheat {
  return (obj || new Cheat).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
token():string|null
token(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
token(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
command():string|null
command(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
command(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startCheat(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tokenOffset
 */
static addToken(builder:flatbuffers.Builder, tokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, tokenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} commandOffset
 */
static addCommand(builder:flatbuffers.Builder, commandOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, commandOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endCheat(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class ChatMessage {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ChatMessage}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ChatMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ChatMessage=} obj
 * @returns {ChatMessage}
 */
static getRootAsChatMessage(bb:flatbuffers.ByteBuffer, obj?:ChatMessage):ChatMessage {
  return (obj || new ChatMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startChatMessage(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endChatMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class ClientMessage {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ClientMessage}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ClientMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ClientMessage=} obj
 * @returns {ClientMessage}
 */
static getRootAsClientMessage(bb:flatbuffers.ByteBuffer, obj?:ClientMessage):ClientMessage {
  return (obj || new ClientMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {BerryhunterApi.ClientMessageBody}
 */
bodyType():BerryhunterApi.ClientMessageBody {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /** @type {BerryhunterApi.ClientMessageBody} */ (this.bb!.readUint8(this.bb_pos + offset)) : BerryhunterApi.ClientMessageBody.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
body<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startClientMessage(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.ClientMessageBody} bodyType
 */
static addBodyType(builder:flatbuffers.Builder, bodyType:BerryhunterApi.ClientMessageBody) {
  builder.addFieldInt8(0, bodyType, BerryhunterApi.ClientMessageBody.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
static addBody(builder:flatbuffers.Builder, bodyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endClientMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class AABB {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {AABB}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):AABB {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
lower(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  return (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos, this.bb!);
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
upper(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  return (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + 8, this.bb!);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lower_x
 * @param {number} lower_y
 * @param {number} upper_x
 * @param {number} upper_y
 * @returns {flatbuffers.Offset}
 */
static createAABB(builder:flatbuffers.Builder, lower_x: number, lower_y: number, upper_x: number, upper_y: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.prep(4, 8);
  builder.writeFloat32(upper_y);
  builder.writeFloat32(upper_x);
  builder.prep(4, 8);
  builder.writeFloat32(lower_y);
  builder.writeFloat32(lower_x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class ItemStack {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ItemStack}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ItemStack {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
item():number {
  return this.bb!.readUint8(this.bb_pos);
};

/**
 * @returns {number}
 */
count():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
slot():number {
  return this.bb!.readUint8(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} item
 * @param {number} count
 * @param {number} slot
 * @returns {flatbuffers.Offset}
 */
static createItemStack(builder:flatbuffers.Builder, item: number, count: number, slot: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.pad(3);
  builder.writeInt8(slot);
  builder.writeInt32(count);
  builder.pad(3);
  builder.writeInt8(item);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class OngoingAction {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {OngoingAction}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):OngoingAction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
ticksRemaining():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @returns {BerryhunterApi.ActionType}
 */
actionType():BerryhunterApi.ActionType {
  return /** @type {BerryhunterApi.ActionType} */ (this.bb!.readUint8(this.bb_pos + 2));
};

/**
 * @returns {number}
 */
item():number {
  return this.bb!.readUint8(this.bb_pos + 3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ticks_remaining
 * @param {BerryhunterApi.ActionType} action_type
 * @param {number} item
 * @returns {flatbuffers.Offset}
 */
static createOngoingAction(builder:flatbuffers.Builder, ticks_remaining: number, action_type: BerryhunterApi.ActionType, item: number):flatbuffers.Offset {
  builder.prep(2, 4);
  builder.writeInt8(item);
  builder.writeInt8(action_type);
  builder.writeInt16(ticks_remaining);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Entity {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Entity}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Entity {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Entity=} obj
 * @returns {Entity}
 */
static getRootAsEntity(bb:flatbuffers.ByteBuffer, obj?:Entity):Entity {
  return (obj || new Entity).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {BerryhunterApi.AnyEntity}
 */
eType():BerryhunterApi.AnyEntity {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /** @type {BerryhunterApi.AnyEntity} */ (this.bb!.readUint8(this.bb_pos + offset)) : BerryhunterApi.AnyEntity.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
e<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startEntity(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.AnyEntity} eType
 */
static addEType(builder:flatbuffers.Builder, eType:BerryhunterApi.AnyEntity) {
  builder.addFieldInt8(0, eType, BerryhunterApi.AnyEntity.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eOffset
 */
static addE(builder:flatbuffers.Builder, eOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, eOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endEntity(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Resource {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Resource}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Resource {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Resource=} obj
 * @returns {Resource}
 */
static getRootAsResource(bb:flatbuffers.ByteBuffer, obj?:Resource):Resource {
  return (obj || new Resource).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
id():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns {BerryhunterApi.EntityType}
 */
entityType():BerryhunterApi.EntityType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /** @type {BerryhunterApi.EntityType} */ (this.bb!.readUint16(this.bb_pos + offset)) : BerryhunterApi.EntityType.DebugCircle;
};

/**
 * @param {number} index
 * @returns {BerryhunterApi.StatusEffect}
 */
statusEffects(index: number):BerryhunterApi.StatusEffect|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /** @type {BerryhunterApi.StatusEffect} */ (this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2)) : /** @type {BerryhunterApi.StatusEffect} */ (0);
};

/**
 * @returns {number}
 */
statusEffectsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint16Array}
 */
statusEffectsArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
pos(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns {number}
 */
radius():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
capacity():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
stock():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {BerryhunterApi.AABB=} obj
 * @returns {BerryhunterApi.AABB|null}
 */
aabb(obj?:BerryhunterApi.AABB):BerryhunterApi.AABB|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new BerryhunterApi.AABB).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startResource(builder:flatbuffers.Builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.EntityType} entityType
 */
static addEntityType(builder:flatbuffers.Builder, entityType:BerryhunterApi.EntityType) {
  builder.addFieldInt16(1, entityType, BerryhunterApi.EntityType.DebugCircle);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} statusEffectsOffset
 */
static addStatusEffects(builder:flatbuffers.Builder, statusEffectsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, statusEffectsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<BerryhunterApi.StatusEffect>} data
 * @returns {flatbuffers.Offset}
 */
static createStatusEffectsVector(builder:flatbuffers.Builder, data:BerryhunterApi.StatusEffect[]):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startStatusEffectsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 */
static addRadius(builder:flatbuffers.Builder, radius:number) {
  builder.addFieldInt16(4, radius, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} capacity
 */
static addCapacity(builder:flatbuffers.Builder, capacity:number) {
  builder.addFieldInt8(5, capacity, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stock
 */
static addStock(builder:flatbuffers.Builder, stock:number) {
  builder.addFieldInt8(6, stock, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} aabbOffset
 */
static addAabb(builder:flatbuffers.Builder, aabbOffset:flatbuffers.Offset) {
  builder.addFieldStruct(7, aabbOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endResource(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Placeable {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Placeable}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Placeable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Placeable=} obj
 * @returns {Placeable}
 */
static getRootAsPlaceable(bb:flatbuffers.ByteBuffer, obj?:Placeable):Placeable {
  return (obj || new Placeable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
id():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns {BerryhunterApi.EntityType}
 */
entityType():BerryhunterApi.EntityType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /** @type {BerryhunterApi.EntityType} */ (this.bb!.readUint16(this.bb_pos + offset)) : BerryhunterApi.EntityType.DebugCircle;
};

/**
 * @param {number} index
 * @returns {BerryhunterApi.StatusEffect}
 */
statusEffects(index: number):BerryhunterApi.StatusEffect|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /** @type {BerryhunterApi.StatusEffect} */ (this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2)) : /** @type {BerryhunterApi.StatusEffect} */ (0);
};

/**
 * @returns {number}
 */
statusEffectsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint16Array}
 */
statusEffectsArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
pos(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns {number}
 */
radius():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
item():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {BerryhunterApi.AABB=} obj
 * @returns {BerryhunterApi.AABB|null}
 */
aabb(obj?:BerryhunterApi.AABB):BerryhunterApi.AABB|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new BerryhunterApi.AABB).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startPlaceable(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.EntityType} entityType
 */
static addEntityType(builder:flatbuffers.Builder, entityType:BerryhunterApi.EntityType) {
  builder.addFieldInt16(1, entityType, BerryhunterApi.EntityType.DebugCircle);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} statusEffectsOffset
 */
static addStatusEffects(builder:flatbuffers.Builder, statusEffectsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, statusEffectsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<BerryhunterApi.StatusEffect>} data
 * @returns {flatbuffers.Offset}
 */
static createStatusEffectsVector(builder:flatbuffers.Builder, data:BerryhunterApi.StatusEffect[]):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startStatusEffectsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 */
static addRadius(builder:flatbuffers.Builder, radius:number) {
  builder.addFieldInt16(4, radius, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} item
 */
static addItem(builder:flatbuffers.Builder, item:number) {
  builder.addFieldInt8(5, item, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} aabbOffset
 */
static addAabb(builder:flatbuffers.Builder, aabbOffset:flatbuffers.Offset) {
  builder.addFieldStruct(6, aabbOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endPlaceable(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Mob {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Mob}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Mob {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Mob=} obj
 * @returns {Mob}
 */
static getRootAsMob(bb:flatbuffers.ByteBuffer, obj?:Mob):Mob {
  return (obj || new Mob).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
id():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns {BerryhunterApi.EntityType}
 */
entityType():BerryhunterApi.EntityType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /** @type {BerryhunterApi.EntityType} */ (this.bb!.readUint16(this.bb_pos + offset)) : BerryhunterApi.EntityType.DebugCircle;
};

/**
 * @param {number} index
 * @returns {BerryhunterApi.StatusEffect}
 */
statusEffects(index: number):BerryhunterApi.StatusEffect|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /** @type {BerryhunterApi.StatusEffect} */ (this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2)) : /** @type {BerryhunterApi.StatusEffect} */ (0);
};

/**
 * @returns {number}
 */
statusEffectsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint16Array}
 */
statusEffectsArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
pos(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns {number}
 */
radius():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
rotation():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {BerryhunterApi.AABB=} obj
 * @returns {BerryhunterApi.AABB|null}
 */
aabb(obj?:BerryhunterApi.AABB):BerryhunterApi.AABB|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new BerryhunterApi.AABB).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns {number}
 */
mobId():number {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startMob(builder:flatbuffers.Builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.EntityType} entityType
 */
static addEntityType(builder:flatbuffers.Builder, entityType:BerryhunterApi.EntityType) {
  builder.addFieldInt16(1, entityType, BerryhunterApi.EntityType.DebugCircle);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} statusEffectsOffset
 */
static addStatusEffects(builder:flatbuffers.Builder, statusEffectsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, statusEffectsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<BerryhunterApi.StatusEffect>} data
 * @returns {flatbuffers.Offset}
 */
static createStatusEffectsVector(builder:flatbuffers.Builder, data:BerryhunterApi.StatusEffect[]):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startStatusEffectsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 */
static addRadius(builder:flatbuffers.Builder, radius:number) {
  builder.addFieldInt16(4, radius, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rotation
 */
static addRotation(builder:flatbuffers.Builder, rotation:number) {
  builder.addFieldFloat32(5, rotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} aabbOffset
 */
static addAabb(builder:flatbuffers.Builder, aabbOffset:flatbuffers.Offset) {
  builder.addFieldStruct(6, aabbOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mobId
 */
static addMobId(builder:flatbuffers.Builder, mobId:number) {
  builder.addFieldInt16(7, mobId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endMob(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Character {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Character}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Character {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Character=} obj
 * @returns {Character}
 */
static getRootAsCharacter(bb:flatbuffers.ByteBuffer, obj?:Character):Character {
  return (obj || new Character).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
id():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns {BerryhunterApi.EntityType}
 */
entityType():BerryhunterApi.EntityType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /** @type {BerryhunterApi.EntityType} */ (this.bb!.readUint16(this.bb_pos + offset)) : BerryhunterApi.EntityType.DebugCircle;
};

/**
 * @param {number} index
 * @returns {BerryhunterApi.StatusEffect}
 */
statusEffects(index: number):BerryhunterApi.StatusEffect|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /** @type {BerryhunterApi.StatusEffect} */ (this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2)) : /** @type {BerryhunterApi.StatusEffect} */ (0);
};

/**
 * @returns {number}
 */
statusEffectsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint16Array}
 */
statusEffectsArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
pos(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns {number}
 */
radius():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
rotation():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {boolean}
 */
isHit():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {BerryhunterApi.OngoingAction=} obj
 * @returns {BerryhunterApi.OngoingAction|null}
 */
currentAction(obj?:BerryhunterApi.OngoingAction):BerryhunterApi.OngoingAction|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new BerryhunterApi.OngoingAction).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
equipment(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
equipmentLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
equipmentArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
health():number {
  var offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
satiety():number {
  var offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
bodyTemperature():number {
  var offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {BerryhunterApi.AABB=} obj
 * @returns {BerryhunterApi.AABB|null}
 */
aabb(obj?:BerryhunterApi.AABB):BerryhunterApi.AABB|null {
  var offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new BerryhunterApi.AABB).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startCharacter(builder:flatbuffers.Builder) {
  builder.startObject(14);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.EntityType} entityType
 */
static addEntityType(builder:flatbuffers.Builder, entityType:BerryhunterApi.EntityType) {
  builder.addFieldInt16(1, entityType, BerryhunterApi.EntityType.DebugCircle);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} statusEffectsOffset
 */
static addStatusEffects(builder:flatbuffers.Builder, statusEffectsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, statusEffectsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<BerryhunterApi.StatusEffect>} data
 * @returns {flatbuffers.Offset}
 */
static createStatusEffectsVector(builder:flatbuffers.Builder, data:BerryhunterApi.StatusEffect[]):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startStatusEffectsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 */
static addRadius(builder:flatbuffers.Builder, radius:number) {
  builder.addFieldInt16(4, radius, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rotation
 */
static addRotation(builder:flatbuffers.Builder, rotation:number) {
  builder.addFieldFloat32(5, rotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isHit
 */
static addIsHit(builder:flatbuffers.Builder, isHit:boolean) {
  builder.addFieldInt8(6, +isHit, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} currentActionOffset
 */
static addCurrentAction(builder:flatbuffers.Builder, currentActionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(7, currentActionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} equipmentOffset
 */
static addEquipment(builder:flatbuffers.Builder, equipmentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, equipmentOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
static createEquipmentVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startEquipmentVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} health
 */
static addHealth(builder:flatbuffers.Builder, health:number) {
  builder.addFieldInt32(10, health, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} satiety
 */
static addSatiety(builder:flatbuffers.Builder, satiety:number) {
  builder.addFieldInt32(11, satiety, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} bodyTemperature
 */
static addBodyTemperature(builder:flatbuffers.Builder, bodyTemperature:number) {
  builder.addFieldInt32(12, bodyTemperature, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} aabbOffset
 */
static addAabb(builder:flatbuffers.Builder, aabbOffset:flatbuffers.Offset) {
  builder.addFieldStruct(13, aabbOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endCharacter(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Spectator {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Spectator}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Spectator {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Spectator=} obj
 * @returns {Spectator}
 */
static getRootAsSpectator(bb:flatbuffers.ByteBuffer, obj?:Spectator):Spectator {
  return (obj || new Spectator).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
id():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param {BerryhunterApi.Vec2f=} obj
 * @returns {BerryhunterApi.Vec2f|null}
 */
pos(obj?:BerryhunterApi.Vec2f):BerryhunterApi.Vec2f|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startSpectator(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endSpectator(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class GameState {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {GameState}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):GameState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {GameState=} obj
 * @returns {GameState}
 */
static getRootAsGameState(bb:flatbuffers.ByteBuffer, obj?:GameState):GameState {
  return (obj || new GameState).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
tick():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns {BerryhunterApi.Player}
 */
playerType():BerryhunterApi.Player {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /** @type {BerryhunterApi.Player} */ (this.bb!.readUint8(this.bb_pos + offset)) : BerryhunterApi.Player.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
player<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {number} index
 * @param {BerryhunterApi.ItemStack=} obj
 * @returns {BerryhunterApi.ItemStack}
 */
inventory(index: number, obj?:BerryhunterApi.ItemStack):BerryhunterApi.ItemStack|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new BerryhunterApi.ItemStack).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
};

/**
 * @returns {number}
 */
inventoryLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {BerryhunterApi.Entity=} obj
 * @returns {BerryhunterApi.Entity}
 */
entities(index: number, obj?:BerryhunterApi.Entity):BerryhunterApi.Entity|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new BerryhunterApi.Entity).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns {number}
 */
entitiesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startGameState(builder:flatbuffers.Builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} tick
 */
static addTick(builder:flatbuffers.Builder, tick:flatbuffers.Long) {
  builder.addFieldInt64(0, tick, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.Player} playerType
 */
static addPlayerType(builder:flatbuffers.Builder, playerType:BerryhunterApi.Player) {
  builder.addFieldInt8(1, playerType, BerryhunterApi.Player.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playerOffset
 */
static addPlayer(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, playerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inventoryOffset
 */
static addInventory(builder:flatbuffers.Builder, inventoryOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, inventoryOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startInventoryVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} entitiesOffset
 */
static addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, entitiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
static createEntitiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startEntitiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endGameState(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Welcome {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Welcome}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Welcome {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Welcome=} obj
 * @returns {Welcome}
 */
static getRootAsWelcome(bb:flatbuffers.ByteBuffer, obj?:Welcome):Welcome {
  return (obj || new Welcome).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
serverName():string|null
serverName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
serverName(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
mapRadius():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startWelcome(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} serverNameOffset
 */
static addServerName(builder:flatbuffers.Builder, serverNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, serverNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mapRadius
 */
static addMapRadius(builder:flatbuffers.Builder, mapRadius:number) {
  builder.addFieldFloat32(1, mapRadius, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endWelcome(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Accept {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Accept}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Accept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Accept=} obj
 * @returns {Accept}
 */
static getRootAsAccept(bb:flatbuffers.ByteBuffer, obj?:Accept):Accept {
  return (obj || new Accept).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startAccept(builder:flatbuffers.Builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endAccept(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Obituary {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Obituary}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Obituary {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Obituary=} obj
 * @returns {Obituary}
 */
static getRootAsObituary(bb:flatbuffers.ByteBuffer, obj?:Obituary):Obituary {
  return (obj || new Obituary).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startObituary(builder:flatbuffers.Builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endObituary(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class EntityMessage {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {EntityMessage}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):EntityMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {EntityMessage=} obj
 * @returns {EntityMessage}
 */
static getRootAsEntityMessage(bb:flatbuffers.ByteBuffer, obj?:EntityMessage):EntityMessage {
  return (obj || new EntityMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
entityId():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startEntityMessage(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} entityId
 */
static addEntityId(builder:flatbuffers.Builder, entityId:flatbuffers.Long) {
  builder.addFieldInt64(0, entityId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endEntityMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class ScoreboardPlayer {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ScoreboardPlayer}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ScoreboardPlayer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ScoreboardPlayer=} obj
 * @returns {ScoreboardPlayer}
 */
static getRootAsScoreboardPlayer(bb:flatbuffers.ByteBuffer, obj?:ScoreboardPlayer):ScoreboardPlayer {
  return (obj || new ScoreboardPlayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
score():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startScoreboardPlayer(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} score
 */
static addScore(builder:flatbuffers.Builder, score:flatbuffers.Long) {
  builder.addFieldInt64(1, score, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endScoreboardPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class Scoreboard {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Scoreboard}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Scoreboard {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Scoreboard=} obj
 * @returns {Scoreboard}
 */
static getRootAsScoreboard(bb:flatbuffers.ByteBuffer, obj?:Scoreboard):Scoreboard {
  return (obj || new Scoreboard).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {BerryhunterApi.ScoreboardPlayer=} obj
 * @returns {BerryhunterApi.ScoreboardPlayer}
 */
players(index: number, obj?:BerryhunterApi.ScoreboardPlayer):BerryhunterApi.ScoreboardPlayer|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new BerryhunterApi.ScoreboardPlayer).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns {number}
 */
playersLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startScoreboard(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playersOffset
 */
static addPlayers(builder:flatbuffers.Builder, playersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
static createPlayersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startPlayersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endScoreboard(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class ValidToken {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ValidToken}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ValidToken {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ValidToken=} obj
 * @returns {ValidToken}
 */
static getRootAsValidToken(bb:flatbuffers.ByteBuffer, obj?:ValidToken):ValidToken {
  return (obj || new ValidToken).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startValidToken(builder:flatbuffers.Builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endValidToken(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace BerryhunterApi{
export class ServerMessage {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ServerMessage}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ServerMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ServerMessage=} obj
 * @returns {ServerMessage}
 */
static getRootAsServerMessage(bb:flatbuffers.ByteBuffer, obj?:ServerMessage):ServerMessage {
  return (obj || new ServerMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {BerryhunterApi.ServerMessageBody}
 */
bodyType():BerryhunterApi.ServerMessageBody {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /** @type {BerryhunterApi.ServerMessageBody} */ (this.bb!.readUint8(this.bb_pos + offset)) : BerryhunterApi.ServerMessageBody.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
body<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startServerMessage(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {BerryhunterApi.ServerMessageBody} bodyType
 */
static addBodyType(builder:flatbuffers.Builder, bodyType:BerryhunterApi.ServerMessageBody) {
  builder.addFieldInt8(0, bodyType, BerryhunterApi.ServerMessageBody.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
static addBody(builder:flatbuffers.Builder, bodyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endServerMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
