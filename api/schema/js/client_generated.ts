// automatically generated by the FlatBuffers compiler, do not modify

import {flatbuffers} from "./flatbuffers"
import * as NS2522371156 from "./common_generated";

/**
 * @enum
 */
export namespace BerryhunterApi {
    export enum ClientMessageBody {
        NONE = 0,
        Input = 1,
        Join = 2,
        Cheat = 3,
        ChatMessage = 4
    }
}
;

/**
 * @constructor
 */
export namespace BerryhunterApi {
    export class Action {
        /**
         * @type {flatbuffers.ByteBuffer}
         */
        bb: flatbuffers.ByteBuffer | null = null;

        /**
         * @type {number}
         */
        bb_pos: number = 0;

        /**
         * @param {number} i
         * @param {flatbuffers.ByteBuffer} bb
         * @returns {Action}
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Action {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        };

        /**
         * @param {flatbuffers.ByteBuffer} bb
         * @param {Action=} obj
         * @returns {Action}
         */
        static getRootAsAction(bb: flatbuffers.ByteBuffer, obj?: Action): Action {
            return (obj || new Action).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        };

        /**
         * @returns {number}
         */
        item(): number {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
        };

        /**
         * @returns {BerryhunterApi.ActionType}
         */
        actionType(): NS2522371156.BerryhunterApi.ActionType {
            var offset = this.bb!.__offset(this.bb_pos, 6);
            return offset ? /** @type {BerryhunterApi.ActionType} */ (this.bb!.readUint8(this.bb_pos + offset)) : NS2522371156.BerryhunterApi.ActionType.Primary;
        };

        /**
         * @param {flatbuffers.Builder} builder
         */
        static startAction(builder: flatbuffers.Builder) {
            builder.startObject(2);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {number} item
         */
        static addItem(builder: flatbuffers.Builder, item: number) {
            builder.addFieldInt8(0, item, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {BerryhunterApi.ActionType} actionType
         */
        static addActionType(builder: flatbuffers.Builder, actionType: NS2522371156.BerryhunterApi.ActionType) {
            builder.addFieldInt8(1, actionType, NS2522371156.BerryhunterApi.ActionType.Primary);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @returns {flatbuffers.Offset}
         */
        static endAction(builder: flatbuffers.Builder): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        };

    }
}
/**
 * @constructor
 */
export namespace BerryhunterApi {
    export class Input {
        /**
         * @type {flatbuffers.ByteBuffer}
         */
        bb: flatbuffers.ByteBuffer | null = null;

        /**
         * @type {number}
         */
        bb_pos: number = 0;

        /**
         * @param {number} i
         * @param {flatbuffers.ByteBuffer} bb
         * @returns {Input}
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Input {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        };

        /**
         * @param {flatbuffers.ByteBuffer} bb
         * @param {Input=} obj
         * @returns {Input}
         */
        static getRootAsInput(bb: flatbuffers.ByteBuffer, obj?: Input): Input {
            return (obj || new Input).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        };

        /**
         * @returns {flatbuffers.Long}
         */
        tick(): flatbuffers.Long {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
        };

        /**
         * @param {BerryhunterApi.Vec2f=} obj
         * @returns {BerryhunterApi.Vec2f|null}
         */
        movement(obj?: NS2522371156.BerryhunterApi.Vec2f): NS2522371156.BerryhunterApi.Vec2f | null {
            var offset = this.bb!.__offset(this.bb_pos, 6);
            return offset ? (obj || new NS2522371156.BerryhunterApi.Vec2f).__init(this.bb_pos + offset, this.bb!) : null;
        };

        /**
         * @returns {number}
         */
        rotation(): number {
            var offset = this.bb!.__offset(this.bb_pos, 8);
            return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
        };

        /**
         * @param {BerryhunterApi.Action=} obj
         * @returns {BerryhunterApi.Action|null}
         */
        action(obj?: BerryhunterApi.Action): BerryhunterApi.Action | null {
            var offset = this.bb!.__offset(this.bb_pos, 10);
            return offset ? (obj || new BerryhunterApi.Action).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
        };

        /**
         * @param {flatbuffers.Builder} builder
         */
        static startInput(builder: flatbuffers.Builder) {
            builder.startObject(4);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Long} tick
         */
        static addTick(builder: flatbuffers.Builder, tick: flatbuffers.Long) {
            builder.addFieldInt64(0, tick, builder.createLong(0, 0));
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} movementOffset
         */
        static addMovement(builder: flatbuffers.Builder, movementOffset: flatbuffers.Offset) {
            builder.addFieldStruct(1, movementOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {number} rotation
         */
        static addRotation(builder: flatbuffers.Builder, rotation: number) {
            builder.addFieldFloat32(2, rotation, 0.0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} actionOffset
         */
        static addAction(builder: flatbuffers.Builder, actionOffset: flatbuffers.Offset) {
            builder.addFieldOffset(3, actionOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @returns {flatbuffers.Offset}
         */
        static endInput(builder: flatbuffers.Builder): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        };

    }
}
/**
 * @constructor
 */
export namespace BerryhunterApi {
    export class Join {
        /**
         * @type {flatbuffers.ByteBuffer}
         */
        bb: flatbuffers.ByteBuffer | null = null;

        /**
         * @type {number}
         */
        bb_pos: number = 0;

        /**
         * @param {number} i
         * @param {flatbuffers.ByteBuffer} bb
         * @returns {Join}
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Join {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        };

        /**
         * @param {flatbuffers.ByteBuffer} bb
         * @param {Join=} obj
         * @returns {Join}
         */
        static getRootAsJoin(bb: flatbuffers.ByteBuffer, obj?: Join): Join {
            return (obj || new Join).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        };

        /**
         * @param {flatbuffers.Encoding=} optionalEncoding
         * @returns {string|Uint8Array|null}
         */
        playerName(): string | null
        playerName(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
        playerName(optionalEncoding?: any): string | Uint8Array | null {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
        };

        /**
         * @param {flatbuffers.Builder} builder
         */
        static startJoin(builder: flatbuffers.Builder) {
            builder.startObject(1);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} playerNameOffset
         */
        static addPlayerName(builder: flatbuffers.Builder, playerNameOffset: flatbuffers.Offset) {
            builder.addFieldOffset(0, playerNameOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @returns {flatbuffers.Offset}
         */
        static endJoin(builder: flatbuffers.Builder): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        };

    }
}
/**
 * @constructor
 */
export namespace BerryhunterApi {
    export class Cheat {
        /**
         * @type {flatbuffers.ByteBuffer}
         */
        bb: flatbuffers.ByteBuffer | null = null;

        /**
         * @type {number}
         */
        bb_pos: number = 0;

        /**
         * @param {number} i
         * @param {flatbuffers.ByteBuffer} bb
         * @returns {Cheat}
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Cheat {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        };

        /**
         * @param {flatbuffers.ByteBuffer} bb
         * @param {Cheat=} obj
         * @returns {Cheat}
         */
        static getRootAsCheat(bb: flatbuffers.ByteBuffer, obj?: Cheat): Cheat {
            return (obj || new Cheat).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        };

        /**
         * @param {flatbuffers.Encoding=} optionalEncoding
         * @returns {string|Uint8Array|null}
         */
        token(): string | null
        token(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
        token(optionalEncoding?: any): string | Uint8Array | null {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
        };

        /**
         * @param {flatbuffers.Encoding=} optionalEncoding
         * @returns {string|Uint8Array|null}
         */
        command(): string | null
        command(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
        command(optionalEncoding?: any): string | Uint8Array | null {
            var offset = this.bb!.__offset(this.bb_pos, 6);
            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
        };

        /**
         * @param {flatbuffers.Builder} builder
         */
        static startCheat(builder: flatbuffers.Builder) {
            builder.startObject(2);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} tokenOffset
         */
        static addToken(builder: flatbuffers.Builder, tokenOffset: flatbuffers.Offset) {
            builder.addFieldOffset(0, tokenOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} commandOffset
         */
        static addCommand(builder: flatbuffers.Builder, commandOffset: flatbuffers.Offset) {
            builder.addFieldOffset(1, commandOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @returns {flatbuffers.Offset}
         */
        static endCheat(builder: flatbuffers.Builder): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        };

    }
}
/**
 * @constructor
 */
export namespace BerryhunterApi {
    export class ChatMessage {
        /**
         * @type {flatbuffers.ByteBuffer}
         */
        bb: flatbuffers.ByteBuffer | null = null;

        /**
         * @type {number}
         */
        bb_pos: number = 0;

        /**
         * @param {number} i
         * @param {flatbuffers.ByteBuffer} bb
         * @returns {ChatMessage}
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): ChatMessage {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        };

        /**
         * @param {flatbuffers.ByteBuffer} bb
         * @param {ChatMessage=} obj
         * @returns {ChatMessage}
         */
        static getRootAsChatMessage(bb: flatbuffers.ByteBuffer, obj?: ChatMessage): ChatMessage {
            return (obj || new ChatMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        };

        /**
         * @param {flatbuffers.Encoding=} optionalEncoding
         * @returns {string|Uint8Array|null}
         */
        message(): string | null
        message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
        message(optionalEncoding?: any): string | Uint8Array | null {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
        };

        /**
         * @param {flatbuffers.Builder} builder
         */
        static startChatMessage(builder: flatbuffers.Builder) {
            builder.startObject(1);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} messageOffset
         */
        static addMessage(builder: flatbuffers.Builder, messageOffset: flatbuffers.Offset) {
            builder.addFieldOffset(0, messageOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @returns {flatbuffers.Offset}
         */
        static endChatMessage(builder: flatbuffers.Builder): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        };

    }
}
/**
 * @constructor
 */
export namespace BerryhunterApi {
    export class ClientMessage {
        /**
         * @type {flatbuffers.ByteBuffer}
         */
        bb: flatbuffers.ByteBuffer | null = null;

        /**
         * @type {number}
         */
        bb_pos: number = 0;

        /**
         * @param {number} i
         * @param {flatbuffers.ByteBuffer} bb
         * @returns {ClientMessage}
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): ClientMessage {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        };

        /**
         * @param {flatbuffers.ByteBuffer} bb
         * @param {ClientMessage=} obj
         * @returns {ClientMessage}
         */
        static getRootAsClientMessage(bb: flatbuffers.ByteBuffer, obj?: ClientMessage): ClientMessage {
            return (obj || new ClientMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        };

        /**
         * @returns {BerryhunterApi.ClientMessageBody}
         */
        bodyType(): BerryhunterApi.ClientMessageBody {
            var offset = this.bb!.__offset(this.bb_pos, 4);
            return offset ? /** @type {BerryhunterApi.ClientMessageBody} */ (this.bb!.readUint8(this.bb_pos + offset)) : BerryhunterApi.ClientMessageBody.NONE;
        };

        /**
         * @param {flatbuffers.Table} obj
         * @returns {?flatbuffers.Table}
         */
        body<T extends flatbuffers.Table>(obj: T): T | null {
            var offset = this.bb!.__offset(this.bb_pos, 6);
            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
        };

        /**
         * @param {flatbuffers.Builder} builder
         */
        static startClientMessage(builder: flatbuffers.Builder) {
            builder.startObject(2);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {BerryhunterApi.ClientMessageBody} bodyType
         */
        static addBodyType(builder: flatbuffers.Builder, bodyType: BerryhunterApi.ClientMessageBody) {
            builder.addFieldInt8(0, bodyType, BerryhunterApi.ClientMessageBody.NONE);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} bodyOffset
         */
        static addBody(builder: flatbuffers.Builder, bodyOffset: flatbuffers.Offset) {
            builder.addFieldOffset(1, bodyOffset, 0);
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @returns {flatbuffers.Offset}
         */
        static endClientMessage(builder: flatbuffers.Builder): flatbuffers.Offset {
            var offset = builder.endObject();
            return offset;
        };

        /**
         * @param {flatbuffers.Builder} builder
         * @param {flatbuffers.Offset} offset
         */
        static finishClientMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
            builder.finish(offset);
        };

    }
}
