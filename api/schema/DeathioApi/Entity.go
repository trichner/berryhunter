// automatically generated by the FlatBuffers compiler, do not modify

package DeathioApi

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Entity struct {
	_tab flatbuffers.Table
}

func GetRootAsEntity(buf []byte, offset flatbuffers.UOffsetT) *Entity {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Entity{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Entity) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Entity) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Entity) EType() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Entity) MutateEType(n byte) bool {
	return rcv._tab.MutateByteSlot(4, n)
}

func (rcv *Entity) E(obj *flatbuffers.Table) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		rcv._tab.Union(obj, o)
		return true
	}
	return false
}

func EntityStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func EntityAddEType(builder *flatbuffers.Builder, eType byte) {
	builder.PrependByteSlot(0, eType, 0)
}
func EntityAddE(builder *flatbuffers.Builder, e flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(e), 0)
}
func EntityEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
