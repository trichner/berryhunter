// automatically generated by the FlatBuffers compiler, do not modify

package BerryhunterApi

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type AABB struct {
	_tab flatbuffers.Struct
}

func (rcv *AABB) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AABB) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *AABB) Lower(obj *Vec2f) *Vec2f {
	if obj == nil {
		obj = new(Vec2f)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+0)
	return obj
}
func (rcv *AABB) Upper(obj *Vec2f) *Vec2f {
	if obj == nil {
		obj = new(Vec2f)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+8)
	return obj
}

func CreateAABB(builder *flatbuffers.Builder, lower_x float32, lower_y float32, upper_x float32, upper_y float32) flatbuffers.UOffsetT {
	builder.Prep(4, 16)
	builder.Prep(4, 8)
	builder.PrependFloat32(upper_y)
	builder.PrependFloat32(upper_x)
	builder.Prep(4, 8)
	builder.PrependFloat32(lower_y)
	builder.PrependFloat32(lower_x)
	return builder.Offset()
}
